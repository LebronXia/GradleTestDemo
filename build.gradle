// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: this.file('common.gradle')
buildscript{
    ext.kotlin_version = "1.5.31"
    //配置我们保存的仓库地址
    repositories {
        //maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
        maven{
            url uri('repo')
        }
        mavenCentral()
        google()
        jcenter()

    }
    //配置我们工程的"插件依赖地址"
    dependencies {
        classpath "com.android.tools.build:gradle:3.4.0"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.xiam.plugin:startplugin:1.0.0"
        //classpath ('com.tencent.tinker:tinker-patch-gradle-plugin:1.9.1')
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects   {
    repositories {
       // maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
        mavenCentral()
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir


}

//ext{
//    compileSdkVersion = 30
//}

//println getContent("gradle.properties")
//def getContent(String path){
//    try {
//        //相对于当前的project工程开始查找
//        def file = file(path)
//        return file.text
//    } catch(GradleException e){
//        println 'file not found'
//    }
//    return null
//}

//根工程文件路径
//println getRootDir().absolutePath
////build
//println getBuildDir().absolutePath
////当前文件根目录
//println getProjectDir().absolutePath

//subprojects {
//    ext{
//        compileSdkVersion = 30
//    }
//}

/**
 * 配置阶段开始前的监听回调
 */
//beforeEvaluate {
//
//}
//
///**
// * 配置阶段完成以后的回调
// */
//afterEvaluate {
//    println '配置阶段执行完毕'
//}
//
///**
// * grade执行完毕后的回调监听
// */
//gradle.buildFinished {
//    println '执行阶段执行完毕'
//}

//this.getProjects()
//
//def getProjects(){
//    println '------'
//    println 'Root project'
//    println '-----'
//    getAllprojects().eachWithIndex{ Project project, int index ->
//        if (index == 0){
//            println "Root prohrct ':${project.name}"
//        } else {
//            println "+---- project ':${project.name}"
//        }
//    }
//}

/**
 * 指定app进行配置, 在父工程中完成子工程中的配置
 */
project('app'){
    Project project ->
        apply plugin: 'com.android.application'
        group 'com.imooc'
        version '1.0.0-release'
        dependencies {

        }
        android{

        }
}

/**
 * 对所有的工程进行配置 配置当前节点工程和其subproject的所有project
 */
allprojects{
    group 'com.imooc'
    version '1.0.0-release'
}

println project('app').group

//不包括当前结点工程，只包括它的subproject
subprojects { Project project ->
    if (project.plugins.hasPlugin('com.android.library')){
        apply from: '../publishToMaven.gradle'
    }
}